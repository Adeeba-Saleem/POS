// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POS.EF;

namespace POS.EF.Migrations
{
    [DbContext(typeof(POSDBContext))]
    [Migration("20210109085551_MD090012021")]
    partial class MD090012021
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("POS.Domain.Model.BrandTable", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandId");

                    b.ToTable("BrandTables");
                });

            modelBuilder.Entity("POS.Domain.Model.CategoryTable", b =>
                {
                    b.Property<int>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductCategoryId");

                    b.ToTable("CategoryTables");
                });

            modelBuilder.Entity("POS.Domain.Model.ExpiryDetail", b =>
                {
                    b.Property<int>("ExpiryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ManufactureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExpiryId");

                    b.ToTable("ExpiryDetails");
                });

            modelBuilder.Entity("POS.Domain.Model.PartyAddressTable", b =>
                {
                    b.Property<int>("PartyAddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PartyID")
                        .HasColumnType("int");

                    b.HasKey("PartyAddressID");

                    b.HasIndex("PartyID")
                        .IsUnique()
                        .HasFilter("[PartyID] IS NOT NULL");

                    b.ToTable("PartyAddressTables");
                });

            modelBuilder.Entity("POS.Domain.Model.PartyTable", b =>
                {
                    b.Property<int>("PartyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccountNo")
                        .HasColumnType("int");

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PartyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartyTypeID")
                        .HasColumnType("int");

                    b.HasKey("PartyID");

                    b.ToTable("PartyTables");
                });

            modelBuilder.Entity("POS.Domain.Model.PartyTypeTable", b =>
                {
                    b.Property<int>("PartyTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("PartyType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartyTypeID");

                    b.ToTable("PartyTypeTables");
                });

            modelBuilder.Entity("POS.Domain.Model.ProductsDetailTable", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("ExpiryStatus")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValuationMethod")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("ProductDetailTables");
                });

            modelBuilder.Entity("POS.Domain.Model.StockMovementTable", b =>
                {
                    b.Property<int>("StockMovementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StockMovemntDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StockOutQty")
                        .HasColumnType("int");

                    b.Property<int>("StockQty")
                        .HasColumnType("int");

                    b.HasKey("StockMovementId");

                    b.ToTable("StockMovementTables");
                });

            modelBuilder.Entity("POS.Domain.Model.PartyAddressTable", b =>
                {
                    b.HasOne("POS.Domain.Model.PartyTable", "Party")
                        .WithOne("Address")
                        .HasForeignKey("POS.Domain.Model.PartyAddressTable", "PartyID");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("POS.Domain.Model.PartyTable", b =>
                {
                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
